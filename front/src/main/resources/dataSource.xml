<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" 
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
              http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
              http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
              http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
              http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
              http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd ">
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${com.baojie.audit.jdbc.driver}" />
		<property name="url" value="${com.baojie.audit.jdbc.url}" />
		<property name="username" value="${com.baojie.audit.jdbc.user}" />
		<property name="password" value="${com.baojie.audit.jdbc.password}" />
		<property name="initialSize" value="${com.baojie.audit.jdbc.initPoolSize}" />
		<property name="maxWait" value="10000" /><!-- 配置获取连接等待超时的时间 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" /><!-- 
			配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" /><!-- 
			配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="true" /><!-- 这里建议配置为TRUE，防止取到的连接不可用 -->
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="true" /><!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />
		<property name="defaultAutoCommit" value="true" /><!-- 这里配置提交方式，默认就是TRUE，可以不用配置 -->
		<property name="validationQuery" value="select 1 " /><!-- 验证连接有效与否的SQL，不同的数据配置不同 -->
		<property name="filters" value="stat" />
		<property name="proxyFilters"><!-- 监控数据库 日志 -->
			<list>
				<ref bean="logFilter" />
				<ref bean="statFilter" />
				<ref bean="wallFilter" />
			</list>
		</property>
	</bean>
	<!-- 输出可执行的SQL -->
	<!-- druid 日志配置 -->
	<bean id="logFilter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
		<property name="statementExecutableSqlLogEnable" value="true" />
	</bean>
	<bean id="statFilter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="slowSqlMillis" value="3000" />
		<property name="logSlowSql" value="true" />
		<property name="mergeSql" value="true" />
	</bean>
	<bean id="wallFilter" class="com.alibaba.druid.wall.WallFilter">
		<property name="dbType" value="mysql" />
		<property name="config" ref="wallFilterConfig" />
	</bean>
	<bean id="wallFilterConfig" class="com.alibaba.druid.wall.WallConfig"
		init-method="init">
		<property name="dir" value="META-INF/druid/wall/mysql" />
	</bean>
	
	
	<!-- 注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<!-- <property name="mapperLocations" value="classpath:com/wisdom/cloud/mapper/*/*.xml"></property> -->
		<property name="typeAliasesPackage" value="com.baojie.manage.mapper" />
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageHelper">
					<property name="properties">
						<value>
							dialect=mysql
							offsetAsPageNum=true
							rowBoundsWithCount=true
							pageSizeZero=true
							reasonable=false
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>
	
	<!-- mapper接口所在包名，Spring会自动查找其下的类 --><!-- scan for mappers and let them be autowired -->
	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.baojie.manage.back.*.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	<!-- 配置AOP -->
	<aop:aspectj-autoproxy />
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
        <tx:method name="*" timeout="120" propagation="REQUIRED" rollback-for="Exception" />
    </tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:advisor 
			pointcut="execution(* com.baojie.manage.*.*.service..*ServiceImpl.*(..))"
			advice-ref="txAdvice" />
	</aop:config>

</beans>
